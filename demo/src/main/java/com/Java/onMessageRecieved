@Override
public void onMessageReceived(MessageReceivedEvent event) {
    if (event.getAuthor().isBot()) return;

    String message = event.getMessage().getContentRaw();

    if (message.equalsIgnoreCase("!ping")) {
        event.getChannel().sendMessage("Pong!").queue();
    } else if (message.equalsIgnoreCase("!info")) {
        event.getChannel().sendMessage("I'm your friendly Java Discord bot!").queue();
    }
}
import net.dv8tion.jda.api.interactions.commands.build.Commands;

public static void registerCommands(JDA jda) {
    jda.upsertCommand(Commands.slash("greet", "Greet the user!")).queue();
}
import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;

@Override
public void onSlashCommandInteraction(SlashCommandInteractionEvent event) {
    if (event.getName().equals("greet")) {
        event.reply("Hello! How can I help?").queue();
    }
}
import java.io.FileInputStream;
import java.util.Properties;
botToken=MTM1OTE1NjI0Njg5MTk5MTI4Mw.GtciPA.XKhmC0d6uk_bMEtRzn1C1ZUym7JM0wITVblMY0

public class Config {
    public static String getToken() throws Exception {
        Properties properties = new Properties();
        properties.load(new FileInputStream("config.properties"));
        return properties.getProperty("botToken");
    }
}
